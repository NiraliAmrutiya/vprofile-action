name: PR Merge
## on: workflow_dispatch
on:
  push:
    branches:
      - main
env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: vprofileapp
  EKS_CLUSTER: vprofileapp-eks
  ACTIVE_SERVICE: green
  DOCKER_REPOSITORY: vprofile-docker-repo
  

jobs:
  Build_Docker_Image:
    name: Build docker image 
    runs-on: ubuntu-latest
    
    steps:   
      - name: Code checkout
        uses: actions/checkout@v4

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
   
      - name: Build image & publish to DockerHub
        uses: docker/build-push-action@v6
        with: 
          context: ./ 
          dockerfile: ./Dockerfile          
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_REPOSITORY }}:latest
            ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_REPOSITORY }}:${{ github.run_number }}
  
  DeployToEKS:
    needs: Build_Docker_Image
    runs-on: ubuntu-latest
    steps:
      - name: Code checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Get Kube config file
        run: aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.EKS_CLUSTER }}

      - name: Print config file
        run: cat ~/.kube/config

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Pull image from dockerhub registry
        #Conditional approach: checks if secret exists and create if necessary
        run: |
          kubectl get secret regcred || kubectl create secret docker-registry regcred --docker-server=${{ secrets.DOCKER_REGISTRY_URL }} --docker-username=${{ secrets.DOCKER_USERNAME }} --docker-password=${{ secrets.DOCKER_PASSWORD }}

        ## run: kubectl create secret docker-registry regcred --docker-server=${{ secrets.REGISTRY }} --docker-username=AWS  --docker-password=$(aws ecr get-login-password) 

      - name: Deploy Helm
        uses: bitovi/github-actions-deploy-eks-helm@v1.2.8
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          cluster-name: ${{ env.EKS_CLUSTER }}
          #config-files: .github/values/dev.yaml
          chart-path: helm/vprofilecharts
          namespace: default
          values: appimage=${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_REPOSITORY }},apptag=${{ github.run_number }},elbHost=${{ secrets.ELB_HOST }},activeService=${{ env.ACTIVE_SERVICE }}
          name: vprofile-stack    
